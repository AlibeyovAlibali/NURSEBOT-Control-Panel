#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include "DHT.h"
#include <Servo.h>

#define DHTTYPE DHT11   

const char* ssid = "NURSEBOT";  
const char* password = "12345678";  

ESP8266WebServer server(80); 

Servo myservoone;
uint8_t DHTPin = D4;
bool Line = LOW;
bool Lamp = LOW; 
bool Head = LOW;    
#define ServoPin1 D2

DHT dht(DHTPin, DHTTYPE);                

float Temperature;
float Humidity;

#define Pin D3

int val=0;

#define Pin1 D0
#define Pin2 D1
 
void setup() {
  Serial.begin(115200);
  delay(100);
  
  myservoone.attach(ServoPin1);

  pinMode(Pin,OUTPUT);
  pinMode(Pin2,OUTPUT);
  pinMode(Pin1,INPUT);
  pinMode(DHTPin, INPUT);

  dht.begin();              

  Serial.println("Connecting WiFi ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
  delay(1000);
  Serial.print(".");
  }
  Serial.println("");
  Serial.println("Connected WiFi..!");
  Serial.print("Your IP Address: ");  Serial.println(WiFi.localIP());

  server.on("/", handle_OnConnect);
  server.on("/automove", handle_automove);
  server.on("/error", handle_error);
  server.on("/lampon", handle_lampon);
  server.on("/lampoff", handle_lampoff);
  server.on("/headmove", handle_headmove);
  server.on("/headnotmove", handle_headnotmove);
  server.on("/readTemperature", handleDHT11Temperature);  
  server.on("/readHumidity", handleDHT11Humidity);  
  server.onNotFound(handle_NotFound);

  server.begin();
  Serial.println("HTTP Server started");

}
void loop() {
  
  server.handleClient(); 

  if(Lamp){
    digitalWrite(Pin,HIGH);
  }
  else{
     digitalWrite(Pin,LOW);
  }

   if(Line){
    digitalWrite(Pin2,HIGH);
  }
  else{
     digitalWrite(Pin2,LOW);
  }

  val=digitalRead(Pin1);
   if(val){
   handle_error();
  }
   
}
//normal.....................................................................................
void handle_OnConnect() {
  server.send(200, "text/html", SendHTML(Line,Lamp,Head)); 
}
//climateon.........................................................................................
void handle_automove() {
  Line=HIGH;
  server.send(200, "text/html", SendHTML(true,Lamp,Head)); 
}
//climateoff........................................................................................
void handle_error() {
  Line=LOW; 
  server.send(200, "text/html", SendHTML(false,Lamp,Head));
}
//lampon.........................................................................................
void handle_lampon() {
  Lamp=HIGH;
  server.send(200, "text/html", SendHTML(Line,true,Head)); 
}
//lampoff........................................................................................
void handle_lampoff() {
  Lamp=LOW;
  server.send(200, "text/html", SendHTML(Line,false,Head)); 
}
//headon.........................................................................................
void handle_headmove() {
  Head=HIGH;
  server.send(200, "text/html", SendHTML(Line,Lamp,true));
  for(int i=75;i>=15;i--){
  myservoone.write(i);
  delay(5);
  }
  for(int i=15;i<=165;i++){
  myservoone.write(i);
  delay(5);
  }
  for(int i=165;i>=75;i--){
  myservoone.write(i);      
  delay(5);
  }
  server.send(200, "text/html", SendHTML(Line,Lamp,false)); 
}
//headoff........................................................................................
void handle_headnotmove() {
  Head=LOW;
  server.send(200, "text/html", SendHTML(Line,Lamp,false)); 
  myservoone.write(75);
  delay(200);
}
//Temperatur............................................................................................
void handleDHT11Temperature() {
  float t = dht.readTemperature();  
  String Temperature_Value = String(t);
 
  server.send(200, "text/plane", Temperature_Value);   
  if (isnan(t)) {Serial.println("Failed to read from DHT sensor!");
  }
}
//Rütubət............................................................................................
void handleDHT11Humidity() {
  float h = dht.readHumidity();
  String Humidity_Value = String(h);
 
  server.send(200, "text/plane", Humidity_Value);   if (isnan(h)) {
    Serial.println("Failed to read from DHT sensor !");
  }
}
//Error..........................................................................................
void handle_NotFound(){
  server.send(404, "text/plain", "Not found");
}
//---------------------------------------------------------------------------------------------
String SendHTML(uint8_t linestatus,uint8_t lampstatus,uint8_t headstatus){
  String ptr = "<!DOCTYPE html> <html>\n";
  ptr +="<head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\">\n";
  ptr +="<title>Nursse Bot Control Panel</title>\n";
  ptr +="<link href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" rel=\"stylesheet\">\n";
  ptr +="<style>body{margin: 0;display: flex;justify-content: space-around;background-image: url(\"https://i.ibb.co/5rnF0mv/Dr-Nurse-2-2.png\");background-repeat: no-repeat; background-size: cover;background-attachment: fixed;}\n";
  ptr +=".head{margin: 0;}\n";
  ptr +=".item{display: flex;justify-content: center;margin: 5px;align-items: center;}\n";
  ptr +=".bas{display:flex;justify-content: center;}\n";
  ptr +=".toplu{display: flex;align-items: center;justify-content: center;flex-direction: column;}\n";
  ptr +=".button{background-color:black;border-radius:2.5%;width: 35vh;height: 7vh;margin: 1vh;font-size: 4vh;display: flex;align-items: center;justify-content: center;font-family:cursive;text-decoration: none;}\n";
  ptr +=".button:active{transform: translate(3px,3px);}\n";
  ptr +="a{color: red;}\n";
  ptr +="</style>\n";
  //HTML..........................................................
  ptr +="</head>\n";
  ptr +="<body>\n";
  ptr +="<div></div>\n";
  ptr +="<div>\n";
  ptr +="<div class=\"bas\"><h1 class=\"head\" style=\" color: rgb(98, 219, 143);font-family:cursive; font-size: 10vh;\">Nurse Bot</h1></div>\n";
  ptr +="<div class=\"item\"><i class=\"fa fa-thermometer-half\" style=\"font-size:50px;color:rgb(186, 186, 0);\"></i>\n";
  ptr +="<b><p style=\"font-size:30px; font-family: cursive; color: rgb(38, 220, 114);\">Temperature:<span id=\"TemperatureValue\">0.0</span>";
  ptr +="'C</p></b></div>";
  ptr +="<div class=\"item\"><i class=\"fa fa-tint\" style=\"font-size:50px;color:#6294ce;\"></i>";
  ptr +="<b><p style=\"font-size:30px; font-family: cursive; color: rgb(38, 220, 114);\" >Humidity: <span id=\"HumidityValue\">0.0</span> ";
  ptr +="%</p></b></div>";
  ptr +="<div class=\"toplu\">\n";
  if(linestatus)
  {ptr +="<a class=\"button error\" href=\"/error\">Auto Moveing</a>\n";}
  else
  {ptr +="<a class=\"button automove\" href=\"/automove\">Auto Move</a>\n";}
  if(lampstatus)
  {ptr +="<a class=\"button lampoff\" href=\"/lampoff\">Turn Off Lamp</a>\n";}
  else
  {ptr +="<a class=\"button lampon\" href=\"/lampon\">Turn On Lamp</a>\n";}
  if(headstatus)
  {ptr +="<a class=\"button headoff\" href=\"/headnotmove\">Moveing Head</a>\n";}
  else
  {ptr +="<a class=\"button headon\" href=\"/headmove\">Move Head</a>\n";}
   ptr +="</div>\n";
  //JS.......................................................................................
  ptr += "<script>\n";
  ptr += "setInterval(function(){getTemperatureData();getHumidityData()},5000);function getTemperatureData(){var xhttp=new XMLHttpRequest();xhttp.onreadystatechange=function(){if(this.readyState==4&&this.status==200){document.getElementById(\"TemperatureValue\").innerHTML=this.responseText}};xhttp.open(\"GET\",\"readTemperature\",true);xhttp.send()}function getHumidityData(){var xhttp=new XMLHttpRequest();xhttp.onreadystatechange=function(){if(this.readyState==4&&this.status==200){document.getElementById(\"HumidityValue\").innerHTML=this.responseText}};xhttp.open(\"GET\",\"readHumidity\",true);xhttp.send()}";
  ptr += "</script>\n";
  ptr +="</body>\n";
  ptr +="</html>\n";
  return ptr;
}
